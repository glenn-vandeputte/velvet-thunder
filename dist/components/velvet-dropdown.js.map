{"version":3,"file":"velvet-dropdown.js","sources":["../../src/components/velvet-dropdown.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport { assert } from '@ember/debug';\nimport { hash } from '@ember/helper';\nimport { autoUpdate, computePosition, flip, offset, type Placement, type Strategy } from '@floating-ui/dom';\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport type { ModifierLike, WithBoundArgs } from '@glint/template';\nimport { modifier } from 'ember-modifier';\nimport VelvetButton from './velvet-button.gts';\nimport VelvetDropdownContent from './velvet-dropdown/content.gts';\nimport VelvetIconButton from './velvet-icon-button.gts';\nexport interface VelvetDropdownSignature {\n    Args: {\n        /// Offset of the content in pixels relative to the trigger.\n        /// @default [4]\n        offset?: number;\n        /// Placement of the content relative to the trigger.\n        /// @default [\"bottom-start\"]\n        placement?: Placement;\n        /// CSS position of the content.\n        /// @default [\"absolute\"]\n        strategy?: Strategy;\n    };\n    Blocks: {\n        /// The trigger and the content of the dropdown.\n        default: [{\n                Button: WithBoundArgs<typeof VelvetButton, 'privateDropdownTrigger' | 'isDisclosure' | 'variant'>;\n                Content: WithBoundArgs<typeof VelvetDropdownContent, 'isShown' | 'modifier'>;\n                IconButton: WithBoundArgs<typeof VelvetIconButton, 'privateDropdownTrigger' | 'variant'>;\n                isShown: boolean;\n                hide: () => void;\n                show: () => void;\n                toggle: () => void;\n                content: ModifierLike<ContentSignature>;\n                trigger: ModifierLike<TriggerSignature>;\n            }];\n    };\n    Element: HTMLDivElement;\n}\nexport interface ContentSignature {\n    Element: HTMLElement;\n}\nexport interface TriggerSignature {\n    Element: HTMLElement;\n}\nexport default class VelvetDropdown extends Component<VelvetDropdownSignature> {\n    @tracked\n    isShown = false;\n    triggerElement: HTMLElement | null = null;\n    get offset(): number {\n        const { offset: offset1 } = this.args;\n        return typeof offset1 === 'number' ? offset1 : 4;\n    }\n    get placement(): Placement {\n        return this.args.placement || 'bottom-start';\n    }\n    get strategy(): Strategy {\n        return this.args.strategy || 'absolute';\n    }\n    content = modifier<ContentSignature>((contentElement1)=>{\n        const { placement: placement1, strategy: strategy1, triggerElement: triggerElement1 } = this;\n        assert('[VelvetDropdown] Trigger element must be present.', triggerElement1);\n        // https://floating-ui.com/docs/computeposition#initial-layout:\n        Object.assign(contentElement1.style, {\n            left: 0,\n            position: strategy1,\n            top: 0\n        });\n        const updateFloating1 = async ()=>{\n            const { x: x1, y: y1 } = await computePosition(triggerElement1, contentElement1, {\n                middleware: [\n                    flip(),\n                    offset(this.offset)\n                ],\n                placement: placement1,\n                strategy: strategy1\n            });\n            Object.assign(contentElement1.style, {\n                left: `${x1}px`,\n                top: `${y1}px`\n            });\n        };\n        const cleanupFloating1 = autoUpdate(triggerElement1, contentElement1, updateFloating1);\n        const clickOutsideHandler1 = ({ target: target1 }: MouseEvent)=>{\n            if (target1 !== contentElement1 && target1 !== triggerElement1 && contentElement1.contains(target1 as Node) === false && triggerElement1.contains(target1 as Node) === false) {\n                this.hide();\n            }\n        };\n        const pressEscapeHandler1 = ({ key: key1 }: KeyboardEvent)=>{\n            if (key1 === 'Escape') {\n                this.hide();\n            }\n        };\n        document.addEventListener('click', clickOutsideHandler1);\n        document.addEventListener('keydown', pressEscapeHandler1);\n        return ()=>{\n            cleanupFloating1();\n            document.removeEventListener('click', clickOutsideHandler1);\n            document.removeEventListener('keydown', pressEscapeHandler1);\n        };\n    });\n    trigger = modifier<TriggerSignature>((triggerElement1)=>{\n        this.triggerElement = triggerElement1;\n        triggerElement1.addEventListener('click', this.toggle);\n        return ()=>triggerElement1.removeEventListener('click', this.toggle);\n    });\n    hide = ()=>{\n        this.isShown = false;\n    };\n    show = ()=>{\n        this.isShown = true;\n    };\n    toggle = ()=>{\n        if (this.isShown) {\n            this.hide();\n        } else {\n            this.show();\n        }\n    };\n    static{\n        template(`\n    <div class=\"velvet-dropdown\" ...attributes>\n      {{yield\n        (hash\n          Button=(component\n            VelvetButton\n            isDisclosure=true\n            isExpanded=this.isShown\n            privateDropdownTrigger=this.trigger\n          )\n          Content=(component\n            VelvetDropdownContent\n            isShown=this.isShown\n            modifier=this.content\n          )\n          IconButton=(component\n            VelvetIconButton\n            privateDropdownTrigger=this.trigger\n          )\n          isShown=this.isShown\n          hide=this.hide\n          show=this.show\n          toggle=this.toggle\n          content=this.content\n          trigger=this.trigger\n        )\n      }}\n    </div>\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,"],"names":["VelvetDropdown","Component","g","this","prototype","tracked","i","void 0","triggerElement","offset","offset1","args","placement","strategy","content","modifier","contentElement1","placement1","strategy1","triggerElement1","assert","Object","assign","style","left","position","top","updateFloating1","x","x1","y","y1","computePosition","middleware","flip","cleanupFloating1","autoUpdate","clickOutsideHandler1","target","target1","contains","hide","pressEscapeHandler1","key","key1","document","addEventListener","removeEventListener","trigger","toggle","isShown","show","setComponentTemplate","precompileTemplate","scope","hash","VelvetButton","VelvetDropdownContent","VelvetIconButton","strictMode"],"mappings":"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"}